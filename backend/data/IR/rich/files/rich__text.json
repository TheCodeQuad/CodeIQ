{
  "path": "C:\\CODEIQNEW\\backend\\data\\rich\\rich\\text.py",
  "imports": [
    "import re",
    "from functools import partial, reduce",
    "from math import gcd",
    "from operator import itemgetter",
    "from typing import (\n    TYPE_CHECKING,\n    Any,\n    Callable,\n    Dict,\n    Iterable,\n    List,\n    NamedTuple,\n    Optional,\n    Pattern,\n    Tuple,\n    Union,\n)",
    "from ._loop import loop_last",
    "from ._pick import pick_bool",
    "from ._wrap import divide_line",
    "from .align import AlignMethod",
    "from .cells import cell_len, set_cell_size",
    "from .containers import Lines",
    "from .control import strip_control_codes",
    "from .emoji import EmojiVariant",
    "from .jupyter import JupyterMixin",
    "from .measure import Measurement",
    "from .segment import Segment",
    "from .style import Style, StyleType",
    "from .console import Console, ConsoleOptions, JustifyMethod, OverflowMethod",
    "from .markup import escape",
    "from .markup import render",
    "from .ansi import AnsiDecoder",
    "from rich.console import Console"
  ],
  "classes": [
    {
      "name": "Span",
      "base_classes": "(NamedTuple)",
      "docstring": null,
      "methods": []
    },
    {
      "name": "Text",
      "base_classes": "(JupyterMixin)",
      "docstring": null,
      "methods": []
    }
  ],
  "functions": [
    {
      "name": "__repr__",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "str",
      "docstring": null,
      "calls": [],
      "variables": [],
      "start_line": 57,
      "end_line": 58
    },
    {
      "name": "__bool__",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "bool",
      "docstring": null,
      "calls": [],
      "variables": [],
      "start_line": 60,
      "end_line": 61
    },
    {
      "name": "split",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "Tuple[\"Span\", Optional[\"Span\"]]",
      "docstring": null,
      "calls": [
        "min",
        "Span"
      ],
      "variables": [
        "span1",
        "span2"
      ],
      "start_line": 63,
      "end_line": 74
    },
    {
      "name": "move",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "\"Span\"",
      "docstring": null,
      "calls": [
        "Span"
      ],
      "variables": [],
      "start_line": 76,
      "end_line": 86
    },
    {
      "name": "right_crop",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "\"Span\"",
      "docstring": null,
      "calls": [
        "min",
        "Span"
      ],
      "variables": [],
      "start_line": 88,
      "end_line": 100
    },
    {
      "name": "extend",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "\"Span\"",
      "docstring": null,
      "calls": [
        "Span"
      ],
      "variables": [],
      "start_line": 102,
      "end_line": 115
    },
    {
      "name": "__init__",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "strip_control_codes"
      ],
      "variables": [
        "sanitized_text"
      ],
      "start_line": 144,
      "end_line": 165
    },
    {
      "name": "__len__",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "int",
      "docstring": null,
      "calls": [],
      "variables": [],
      "start_line": 167,
      "end_line": 168
    },
    {
      "name": "__bool__",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "bool",
      "docstring": null,
      "calls": [
        "bool"
      ],
      "variables": [],
      "start_line": 170,
      "end_line": 171
    },
    {
      "name": "__str__",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "str",
      "docstring": null,
      "calls": [],
      "variables": [],
      "start_line": 173,
      "end_line": 174
    },
    {
      "name": "__repr__",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "str",
      "docstring": null,
      "calls": [],
      "variables": [],
      "start_line": 176,
      "end_line": 177
    },
    {
      "name": "__add__",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Any"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "isinstance",
        "result.append",
        "self.copy"
      ],
      "variables": [
        "result"
      ],
      "start_line": 179,
      "end_line": 184
    },
    {
      "name": "__eq__",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "object"
        }
      ],
      "return_type": "bool",
      "docstring": null,
      "calls": [
        "isinstance"
      ],
      "variables": [],
      "start_line": 186,
      "end_line": 189
    },
    {
      "name": "__contains__",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "object"
        }
      ],
      "return_type": "bool",
      "docstring": null,
      "calls": [
        "isinstance"
      ],
      "variables": [],
      "start_line": 191,
      "end_line": 196
    },
    {
      "name": "__getitem__",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Union[int, slice]"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "isinstance",
        "Text",
        "get_text_at",
        "slice.indices",
        "self.divide",
        "len",
        "TypeError",
        "_Span"
      ],
      "variables": [
        "_Span",
        "text",
        "lines"
      ],
      "start_line": 198,
      "end_line": 222
    },
    {
      "name": "get_text_at",
      "parameters": [
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "Text",
        "_Span"
      ],
      "variables": [
        "_Span",
        "text"
      ],
      "start_line": 199,
      "end_line": 210
    },
    {
      "name": "cell_len",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "int",
      "docstring": null,
      "calls": [
        "cell_len"
      ],
      "variables": [],
      "start_line": 225,
      "end_line": 227
    },
    {
      "name": "markup",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "str",
      "docstring": null,
      "calls": [
        "append",
        "itemgetter",
        "markup_spans.sort",
        "escape",
        "len",
        "\"\".join"
      ],
      "variables": [
        "output",
        "plain",
        "markup_spans",
        "position",
        "append",
        "position",
        "markup"
      ],
      "start_line": 230,
      "end_line": 257
    },
    {
      "name": "from_markup",
      "parameters": [
        {
          "name": "cls",
          "type": null
        },
        {
          "name": null,
          "type": "str"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "render"
      ],
      "variables": [
        "rendered_text"
      ],
      "start_line": 260,
      "end_line": 291
    },
    {
      "name": "from_ansi",
      "parameters": [
        {
          "name": "cls",
          "type": null
        },
        {
          "name": null,
          "type": "str"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "joiner.join",
        "Text",
        "decoder.decode",
        "AnsiDecoder"
      ],
      "variables": [
        "joiner",
        "decoder",
        "result"
      ],
      "start_line": 294,
      "end_line": 329
    },
    {
      "name": "styled",
      "parameters": [
        {
          "name": "cls",
          "type": null
        },
        {
          "name": null,
          "type": "str"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "styled_text.stylize",
        "cls"
      ],
      "variables": [
        "styled_text"
      ],
      "start_line": 332,
      "end_line": 354
    },
    {
      "name": "assemble",
      "parameters": [
        {
          "name": "cls",
          "type": null
        },
        {
          "name": null,
          "type": "Union[str, \"Text\", Tuple[str, StyleType]]"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "isinstance",
        "cls",
        "text.apply_meta",
        "append"
      ],
      "variables": [
        "text",
        "append",
        "_Text"
      ],
      "start_line": 357,
      "end_line": 400
    },
    {
      "name": "plain",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "str",
      "docstring": null,
      "calls": [
        "len",
        "\"\".join"
      ],
      "variables": [],
      "start_line": 403,
      "end_line": 407
    },
    {
      "name": "plain",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "str"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "self._trim_spans",
        "strip_control_codes"
      ],
      "variables": [
        "sanitized_text",
        "old_length"
      ],
      "start_line": 410,
      "end_line": 418
    },
    {
      "name": "spans",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "List[Span]",
      "docstring": null,
      "calls": [],
      "variables": [],
      "start_line": 421,
      "end_line": 423
    },
    {
      "name": "spans",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "List[Span]"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [],
      "variables": [],
      "start_line": 426,
      "end_line": 428
    },
    {
      "name": "blank_copy",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "Text"
      ],
      "variables": [
        "copy_self"
      ],
      "start_line": 430,
      "end_line": 441
    },
    {
      "name": "copy",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "Text"
      ],
      "variables": [
        "copy_self"
      ],
      "start_line": 443,
      "end_line": 455
    },
    {
      "name": "stylize",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Union[str, Style]"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "Span",
        "min",
        "self._spans.append"
      ],
      "variables": [
        "length",
        "start",
        "end",
        "end"
      ],
      "start_line": 457,
      "end_line": 481
    },
    {
      "name": "stylize_before",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Union[str, Style]"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "min",
        "self._spans.insert",
        "Span"
      ],
      "variables": [
        "length",
        "start",
        "end",
        "end"
      ],
      "start_line": 483,
      "end_line": 507
    },
    {
      "name": "apply_meta",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Dict[str, Any]"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "Style.from_meta",
        "self.stylize"
      ],
      "variables": [
        "style"
      ],
      "start_line": 509,
      "end_line": 521
    },
    {
      "name": "on",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Any"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "meta.update",
        "Style.from_meta",
        "self.stylize",
        "handlers.items"
      ],
      "variables": [
        "meta"
      ],
      "start_line": 523,
      "end_line": 541
    },
    {
      "name": "remove_suffix",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "str"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "self.right_crop",
        "self.plain.endswith"
      ],
      "variables": [],
      "start_line": 543,
      "end_line": 550
    },
    {
      "name": "get_style_at_offset",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "\"Console\""
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "Style",
      "docstring": null,
      "calls": [
        "len",
        "get_style",
        "get_style(self.style).copy"
      ],
      "variables": [
        "offset",
        "get_style",
        "style"
      ],
      "start_line": 552,
      "end_line": 570
    },
    {
      "name": "extend_style",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "self._text.append",
        "span.extend"
      ],
      "variables": [
        "spans",
        "new_spaces",
        "end_offset"
      ],
      "start_line": 572,
      "end_line": 591
    },
    {
      "name": "highlight_regex",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Union[Pattern[str], str]"
        }
      ],
      "return_type": "int",
      "docstring": null,
      "calls": [
        "callable",
        "re.compile",
        "append_span",
        "re_highlight.finditer",
        "style",
        "isinstance",
        "match.groupdict",
        "get_span",
        "match.groupdict().keys",
        "_Span"
      ],
      "variables": [
        "count",
        "append_span",
        "_Span",
        "plain",
        "re_highlight",
        "get_span",
        "match_style"
      ],
      "start_line": 593,
      "end_line": 631
    },
    {
      "name": "highlight_words",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Iterable[str]"
        },
        {
          "name": null,
          "type": "Union[str, Style]"
        }
      ],
      "return_type": "int",
      "docstring": null,
      "calls": [
        "\"|\".join",
        "match.span",
        "re.escape",
        "re.finditer",
        "add_span",
        "_Span"
      ],
      "variables": [
        "re_words",
        "add_span",
        "count",
        "_Span"
      ],
      "start_line": 633,
      "end_line": 660
    },
    {
      "name": "rstrip",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "self.plain.rstrip"
      ],
      "variables": [],
      "start_line": 662,
      "end_line": 664
    },
    {
      "name": "rstrip_end",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "whitespace_match.group",
        "self.right_crop",
        "_re_whitespace.search",
        "len",
        "min"
      ],
      "variables": [
        "text_length",
        "excess",
        "whitespace_match",
        "whitespace_count"
      ],
      "start_line": 666,
      "end_line": 678
    },
    {
      "name": "set_length",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "self.right_crop",
        "self.pad_right"
      ],
      "variables": [
        "length"
      ],
      "start_line": 680,
      "end_line": 687
    },
    {
      "name": "__rich_console__",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "\"Console\""
        },
        {
          "name": null,
          "type": "\"ConsoleOptions\""
        }
      ],
      "return_type": "Iterable[Segment]",
      "docstring": null,
      "calls": [
        "all_lines.render",
        "Text(\"\\n\").join",
        "self.wrap",
        "Text",
        "pick_bool"
      ],
      "variables": [
        "tab_size",
        "justify",
        "overflow",
        "lines",
        "all_lines"
      ],
      "start_line": 689,
      "end_line": 706
    },
    {
      "name": "__rich_measure__",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "\"Console\""
        },
        {
          "name": null,
          "type": "\"ConsoleOptions\""
        }
      ],
      "return_type": "Measurement",
      "docstring": null,
      "calls": [
        "text.split",
        "cell_len",
        "text.splitlines",
        "max",
        "Measurement"
      ],
      "variables": [
        "text",
        "lines",
        "max_text_width",
        "words",
        "min_text_width"
      ],
      "start_line": 708,
      "end_line": 718
    },
    {
      "name": "render",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "\"Console\""
        }
      ],
      "return_type": "Iterable[\"Segment\"]",
      "docstring": null,
      "calls": [
        "sorted",
        "partial",
        "_Segment",
        "itemgetter",
        "get_style",
        "Segment",
        "get_current_style",
        "enumerate",
        "combine",
        "style_cache_get",
        "Style.null",
        "list",
        "tuple",
        "spans.sort",
        "len",
        "stack_pop",
        "stack_append",
        "zip"
      ],
      "variables": [
        "_Segment",
        "text",
        "get_style",
        "enumerated_spans",
        "style_map",
        "spans",
        "stack",
        "stack_append",
        "stack_pop",
        "style_cache",
        "style_cache_get",
        "combine",
        "styles",
        "cached_style",
        "current_style"
      ],
      "start_line": 720,
      "end_line": 777
    },
    {
      "name": "get_current_style",
      "parameters": [],
      "return_type": "Style",
      "docstring": null,
      "calls": [
        "style_cache_get",
        "tuple",
        "sorted",
        "combine"
      ],
      "variables": [
        "styles",
        "cached_style",
        "current_style"
      ],
      "start_line": 759,
      "end_line": 767
    },
    {
      "name": "join",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Iterable[\"Text\"]"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "append_span",
        "extend_spans",
        "loop_last",
        "extend_text",
        "self.blank_copy",
        "len",
        "_Span",
        "iter_text"
      ],
      "variables": [
        "new_text",
        "extend_text",
        "append_span",
        "extend_spans",
        "offset",
        "_Span"
      ],
      "start_line": 779,
      "end_line": 816
    },
    {
      "name": "iter_text",
      "parameters": [],
      "return_type": "Iterable[\"Text\"]",
      "docstring": null,
      "calls": [
        "loop_last"
      ],
      "variables": [],
      "start_line": 791,
      "end_line": 798
    },
    {
      "name": "expand_tabs",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "append",
        "self.split",
        "Text(\"\").join",
        "Text",
        "line.split",
        "part.extend_style",
        "part.plain.endswith",
        "len"
      ],
      "variables": [
        "tab_size",
        "tab_size",
        "new_text",
        "append",
        "cell_position",
        "parts",
        "tab_remainder",
        "spaces",
        "result"
      ],
      "start_line": 818,
      "end_line": 858
    },
    {
      "name": "truncate",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "set_cell_size",
        "cell_len"
      ],
      "variables": [
        "_overflow",
        "length",
        "spaces"
      ],
      "start_line": 860,
      "end_line": 885
    },
    {
      "name": "_trim_spans",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "_Span",
        "min"
      ],
      "variables": [
        "max_offset",
        "_Span"
      ],
      "start_line": 887,
      "end_line": 899
    },
    {
      "name": "pad",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "_Span"
      ],
      "variables": [
        "pad_characters",
        "_Span"
      ],
      "start_line": 901,
      "end_line": 916
    },
    {
      "name": "pad_left",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "_Span"
      ],
      "variables": [
        "_Span"
      ],
      "start_line": 918,
      "end_line": 932
    },
    {
      "name": "pad_right",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len"
      ],
      "variables": [],
      "start_line": 934,
      "end_line": 943
    },
    {
      "name": "align",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "AlignMethod"
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "self.pad_left",
        "cell_len",
        "self.pad_right",
        "self.truncate"
      ],
      "variables": [
        "excess_space",
        "left"
      ],
      "start_line": 945,
      "end_line": 963
    },
    {
      "name": "append",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Union[\"Text\", str]"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "Span",
        "strip_control_codes",
        "isinstance",
        "ValueError",
        "text._spans.copy",
        "self._spans.extend",
        "self._text.append",
        "TypeError",
        "_Span",
        "len",
        "self._spans.append"
      ],
      "variables": [
        "sanitized_text",
        "offset",
        "text_length",
        "_Span",
        "text_length"
      ],
      "start_line": 965,
      "end_line": 1007
    },
    {
      "name": "append_text",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "\"Text\""
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "text._spans.copy",
        "self._spans.extend",
        "self._text.append",
        "len",
        "_Span",
        "self._spans.append"
      ],
      "variables": [
        "_Span",
        "text_length"
      ],
      "start_line": 1009,
      "end_line": 1029
    },
    {
      "name": "append_tokens",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Iterable[Tuple[str, Optional[StyleType]]]"
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "append_span",
        "append_text",
        "strip_control_codes",
        "len",
        "_Span"
      ],
      "variables": [
        "append_text",
        "append_span",
        "_Span",
        "offset",
        "content"
      ],
      "start_line": 1031,
      "end_line": 1053
    },
    {
      "name": "copy_styles",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "\"Text\""
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "self._spans.extend"
      ],
      "variables": [],
      "start_line": 1055,
      "end_line": 1061
    },
    {
      "name": "split",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "Lines",
      "docstring": null,
      "calls": [
        "match.end",
        "text.endswith",
        "re.escape",
        "lines.pop",
        "re.finditer",
        "self.divide",
        "self.copy",
        "match.span",
        "flatten_spans",
        "Lines"
      ],
      "variables": [
        "text",
        "lines",
        "lines"
      ],
      "start_line": 1063,
      "end_line": 1105
    },
    {
      "name": "flatten_spans",
      "parameters": [],
      "return_type": "Iterable[int]",
      "docstring": null,
      "calls": [
        "re.finditer",
        "re.escape",
        "match.span"
      ],
      "variables": [],
      "start_line": 1092,
      "end_line": 1096
    },
    {
      "name": "divide",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "Iterable[int]"
        }
      ],
      "return_type": "Lines",
      "docstring": null,
      "calls": [
        "_Text",
        "_line_appends[line_no]",
        "list",
        "min",
        "len",
        "max",
        "self.copy",
        "_Span",
        "range",
        "zip",
        "Lines"
      ],
      "variables": [
        "_offsets",
        "text",
        "text_length",
        "divide_offsets",
        "line_ranges",
        "style",
        "justify",
        "overflow",
        "_Text",
        "new_lines",
        "_line_appends",
        "line_count",
        "_Span",
        "lower_bound",
        "upper_bound",
        "start_line_no",
        "upper_bound",
        "lower_bound",
        "start_line_no",
        "end_line_no",
        "end_line_no",
        "lower_bound",
        "upper_bound",
        "upper_bound",
        "lower_bound",
        "end_line_no",
        "new_start",
        "new_end"
      ],
      "start_line": 1107,
      "end_line": 1184
    },
    {
      "name": "right_crop",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "len",
        "_Span",
        "min"
      ],
      "variables": [
        "max_offset",
        "_Span"
      ],
      "start_line": 1186,
      "end_line": 1200
    },
    {
      "name": "wrap",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "\"Console\""
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "Lines",
      "docstring": null,
      "calls": [
        "line.expand_tabs",
        "self.split",
        "line.rstrip_end",
        "lines.extend",
        "new_lines.justify",
        "str",
        "pick_bool",
        "line.truncate",
        "divide_line",
        "line.divide",
        "Lines"
      ],
      "variables": [
        "wrap_justify",
        "wrap_overflow",
        "no_wrap",
        "lines",
        "new_lines",
        "offsets",
        "new_lines"
      ],
      "start_line": 1202,
      "end_line": 1248
    },
    {
      "name": "fit",
      "parameters": [
        {
          "name": "self",
          "type": null
        },
        {
          "name": null,
          "type": "int"
        }
      ],
      "return_type": "Lines",
      "docstring": null,
      "calls": [
        "append",
        "self.split",
        "line.set_length",
        "Lines"
      ],
      "variables": [
        "lines",
        "append"
      ],
      "start_line": 1250,
      "end_line": 1264
    },
    {
      "name": "detect_indentation",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "int",
      "docstring": null,
      "calls": [
        "len",
        "match.group",
        "re.finditer",
        "reduce"
      ],
      "variables": [
        "_indentations",
        "indentation",
        "indentation"
      ],
      "start_line": 1266,
      "end_line": 1285
    },
    {
      "name": "with_indent_guides",
      "parameters": [
        {
          "name": "self",
          "type": null
        }
      ],
      "return_type": "\"Text\"",
      "docstring": null,
      "calls": [
        "text.split",
        "re.compile",
        "line.stylize",
        "new_lines.extend",
        "self.detect_indentation",
        "text.blank_copy",
        "re_indent.match",
        "match.group",
        "Text",
        "text.blank_copy(\"\\n\").join",
        "add_line",
        "divmod",
        "len",
        "text.expand_tabs",
        "self.copy"
      ],
      "variables": [
        "_indent_size",
        "text",
        "indent_line",
        "re_indent",
        "new_lines",
        "add_line",
        "blank_lines",
        "match",
        "indent",
        "new_indent",
        "blank_lines",
        "new_text"
      ],
      "start_line": 1287,
      "end_line": 1333
    }
  ],
  "variables": [
    "DEFAULT_JUSTIFY",
    "DEFAULT_OVERFLOW",
    "_re_whitespace",
    "TextType",
    "GetStyleCallable",
    "start",
    "end",
    "style",
    "span1",
    "span2",
    "__slots__",
    "sanitized_text",
    "result",
    "_Span",
    "text",
    "lines",
    "output",
    "plain",
    "markup_spans",
    "position",
    "append",
    "position",
    "markup",
    "rendered_text",
    "joiner",
    "decoder",
    "result",
    "styled_text",
    "text",
    "append",
    "_Text",
    "sanitized_text",
    "old_length",
    "copy_self",
    "copy_self",
    "length",
    "start",
    "end",
    "end",
    "length",
    "start",
    "end",
    "end",
    "style",
    "meta",
    "offset",
    "get_style",
    "style",
    "spans",
    "new_spaces",
    "end_offset",
    "count",
    "append_span",
    "_Span",
    "plain",
    "re_highlight",
    "get_span",
    "match_style",
    "re_words",
    "add_span",
    "count",
    "_Span",
    "text_length",
    "excess",
    "whitespace_match",
    "whitespace_count",
    "length",
    "tab_size",
    "justify",
    "overflow",
    "lines",
    "all_lines",
    "text",
    "lines",
    "max_text_width",
    "words",
    "min_text_width",
    "_Segment",
    "text",
    "get_style",
    "enumerated_spans",
    "style_map",
    "spans",
    "stack",
    "stack_append",
    "stack_pop",
    "style_cache",
    "style_cache_get",
    "combine",
    "styles",
    "cached_style",
    "current_style",
    "new_text",
    "extend_text",
    "append_span",
    "extend_spans",
    "offset",
    "_Span",
    "tab_size",
    "tab_size",
    "new_text",
    "append",
    "cell_position",
    "parts",
    "tab_remainder",
    "spaces",
    "result",
    "_overflow",
    "length",
    "spaces",
    "max_offset",
    "_Span",
    "pad_characters",
    "_Span",
    "_Span",
    "excess_space",
    "left",
    "sanitized_text",
    "offset",
    "text_length",
    "_Span",
    "text_length",
    "_Span",
    "text_length",
    "append_text",
    "append_span",
    "_Span",
    "offset",
    "content",
    "text",
    "lines",
    "lines",
    "_offsets",
    "text",
    "text_length",
    "divide_offsets",
    "line_ranges",
    "style",
    "justify",
    "overflow",
    "_Text",
    "new_lines",
    "_line_appends",
    "line_count",
    "_Span",
    "lower_bound",
    "upper_bound",
    "start_line_no",
    "upper_bound",
    "lower_bound",
    "start_line_no",
    "end_line_no",
    "end_line_no",
    "lower_bound",
    "lower_bound",
    "upper_bound",
    "upper_bound",
    "lower_bound",
    "end_line_no",
    "new_start",
    "new_end",
    "max_offset",
    "_Span",
    "wrap_justify",
    "wrap_overflow",
    "no_wrap",
    "lines",
    "new_lines",
    "offsets",
    "new_lines",
    "lines",
    "append",
    "_indentations",
    "indentation",
    "indentation",
    "_indent_size",
    "text",
    "indent_line",
    "re_indent",
    "new_lines",
    "add_line",
    "blank_lines",
    "match",
    "indent",
    "new_indent",
    "blank_lines",
    "new_text",
    "text",
    "console"
  ]
}