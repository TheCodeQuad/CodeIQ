{
  "name": "extract",
  "parameters": [
    {
      "name": "cls",
      "type": null
    },
    {
      "name": null,
      "type": "Type[BaseException]"
    },
    {
      "name": null,
      "type": "BaseException"
    },
    {
      "name": null,
      "type": "Optional[TracebackType]"
    }
  ],
  "return_type": "Trace",
  "docstring": null,
  "calls": [
    "append",
    "key.startswith",
    "frame_summary.f_locals.get",
    "walk_tb",
    "stacks.append",
    "islice",
    "frame_summary.f_locals.items",
    "set",
    "stack.exceptions.append",
    "frame_summary.f_code.co_positions",
    "os.path.isabs",
    "getattr",
    "pretty.traverse",
    "Stack",
    "str",
    "get_locals",
    "os.path.join",
    "type",
    "isinstance",
    "filename.startswith",
    "inspect.isfunction",
    "Traceback.extract",
    "_SyntaxError",
    "Trace",
    "next",
    "inspect.isclass",
    "Frame",
    "safe_str",
    "grouped_exceptions.add"
  ],
  "variables": [
    "stacks",
    "is_cause",
    "notes",
    "grouped_exceptions",
    "stack",
    "append",
    "filename",
    "last_instruction",
    "last_instruction",
    "instruction_index",
    "instruction_position",
    "last_instruction",
    "filename",
    "frame",
    "cause",
    "exc_type",
    "exc_value",
    "traceback",
    "is_cause",
    "cause",
    "exc_type",
    "exc_value",
    "traceback",
    "is_cause",
    "trace"
  ],
  "start_line": 413,
  "end_line": 601
}