{
  "path": "C:\\CODEIQNEW\\backend\\data\\rich\\tests\\test_text.py",
  "imports": [
    "import re",
    "from io import StringIO",
    "from typing import List",
    "import pytest",
    "from rich.console import Console, Group",
    "from rich.measure import Measurement",
    "from rich.style import Style",
    "from rich.text import Span, Text"
  ],
  "classes": [],
  "functions": [
    {
      "name": "test_span",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "repr",
        "bool",
        "Span"
      ],
      "variables": [
        "span"
      ],
      "start_line": 13,
      "end_line": 17
    },
    {
      "name": "test_span_split",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span(5, 10, \"foo\").split",
        "Span(0, 10, \"foo\").split",
        "Span"
      ],
      "variables": [],
      "start_line": 20,
      "end_line": 23
    },
    {
      "name": "test_span_move",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span",
        "Span(5, 10, \"foo\").move"
      ],
      "variables": [],
      "start_line": 26,
      "end_line": 27
    },
    {
      "name": "test_span_right_crop",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span",
        "Span(5, 10, \"foo\").right_crop"
      ],
      "variables": [],
      "start_line": 30,
      "end_line": 32
    },
    {
      "name": "test_len",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "len",
        "Text"
      ],
      "variables": [],
      "start_line": 35,
      "end_line": 36
    },
    {
      "name": "test_cell_len",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text"
      ],
      "variables": [],
      "start_line": 39,
      "end_line": 41
    },
    {
      "name": "test_bool",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text"
      ],
      "variables": [],
      "start_line": 44,
      "end_line": 46
    },
    {
      "name": "test_str",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "str"
      ],
      "variables": [],
      "start_line": 49,
      "end_line": 50
    },
    {
      "name": "test_repr",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "isinstance",
        "Text",
        "repr"
      ],
      "variables": [],
      "start_line": 53,
      "end_line": 54
    },
    {
      "name": "test_add",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text(\"foo\").__add__",
        "Text",
        "str"
      ],
      "variables": [
        "text"
      ],
      "start_line": 57,
      "end_line": 60
    },
    {
      "name": "test_eq",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "Text(\"foo\").__eq__"
      ],
      "variables": [],
      "start_line": 63,
      "end_line": 66
    },
    {
      "name": "test_contain",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 69,
      "end_line": 74
    },
    {
      "name": "test_plain_property",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text.append"
      ],
      "variables": [
        "text"
      ],
      "start_line": 77,
      "end_line": 81
    },
    {
      "name": "test_plain_property_setter",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text.append",
        "str",
        "Span"
      ],
      "variables": [
        "text",
        "text"
      ],
      "start_line": 84,
      "end_line": 92
    },
    {
      "name": "test_from_markup",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text.from_markup",
        "str",
        "Span"
      ],
      "variables": [
        "text"
      ],
      "start_line": 95,
      "end_line": 98
    },
    {
      "name": "test_from_ansi",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Style",
        "Text.from_ansi",
        "Span",
        "str"
      ],
      "variables": [
        "text",
        "text",
        "text",
        "text"
      ],
      "start_line": 101,
      "end_line": 116
    },
    {
      "name": "test_copy",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text.append",
        "text.copy"
      ],
      "variables": [
        "text",
        "test_copy"
      ],
      "start_line": 119,
      "end_line": 126
    },
    {
      "name": "test_rstrip",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text.rstrip",
        "str"
      ],
      "variables": [
        "text"
      ],
      "start_line": 129,
      "end_line": 132
    },
    {
      "name": "test_rstrip_end",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text.rstrip_end",
        "str"
      ],
      "variables": [
        "text"
      ],
      "start_line": 135,
      "end_line": 138
    },
    {
      "name": "test_stylize",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span",
        "Text",
        "text.stylize"
      ],
      "variables": [
        "text"
      ],
      "start_line": 141,
      "end_line": 146
    },
    {
      "name": "test_stylize_before",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span",
        "Text",
        "text.stylize_before",
        "text.stylize"
      ],
      "variables": [
        "text"
      ],
      "start_line": 149,
      "end_line": 153
    },
    {
      "name": "test_stylize_negative_index",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span",
        "Text",
        "text.stylize"
      ],
      "variables": [
        "text"
      ],
      "start_line": 156,
      "end_line": 159
    },
    {
      "name": "test_highlight_regex",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "sorted",
        "re.compile",
        "Span",
        "Text",
        "text.highlight_regex",
        "len"
      ],
      "variables": [
        "text",
        "count",
        "count",
        "text",
        "count",
        "text",
        "count",
        "count",
        "text",
        "count"
      ],
      "start_line": 162,
      "end_line": 227
    },
    {
      "name": "test_highlight_regex_callable",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "re.compile",
        "Text",
        "Style.parse",
        "text.highlight_regex",
        "len",
        "text._spans.clear"
      ],
      "variables": [
        "text",
        "re_cve",
        "compiled_re_cve",
        "count",
        "count"
      ],
      "start_line": 230,
      "end_line": 263
    },
    {
      "name": "get_style",
      "parameters": [
        {
          "name": null,
          "type": "str"
        }
      ],
      "return_type": "Style",
      "docstring": null,
      "calls": [
        "Style.parse"
      ],
      "variables": [],
      "start_line": 235,
      "end_line": 238
    },
    {
      "name": "test_highlight_words",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "sorted",
        "Text",
        "Span",
        "text.highlight_words"
      ],
      "variables": [
        "text",
        "words",
        "count",
        "text",
        "words",
        "count",
        "text",
        "words",
        "count",
        "text",
        "count"
      ],
      "start_line": 266,
      "end_line": 294
    },
    {
      "name": "test_set_length",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.set_length",
        "Text",
        "expected.append",
        "text.stylize"
      ],
      "variables": [
        "text",
        "text",
        "text",
        "expected"
      ],
      "start_line": 297,
      "end_line": 313
    },
    {
      "name": "test_console_width",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "Text",
        "text.__rich_measure__",
        "Text(\" \\n  \\n   \").__rich_measure__",
        "Text(\" \" * 4).__rich_measure__",
        "Measurement"
      ],
      "variables": [
        "console",
        "text"
      ],
      "start_line": 316,
      "end_line": 321
    },
    {
      "name": "test_join",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "str",
        "Span",
        "Text(\"bar\").join"
      ],
      "variables": [
        "text"
      ],
      "start_line": 324,
      "end_line": 327
    },
    {
      "name": "test_trim_spans",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text._trim_spans",
        "Span"
      ],
      "variables": [
        "text"
      ],
      "start_line": 330,
      "end_line": 334
    },
    {
      "name": "test_pad_left",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.pad_left",
        "Text",
        "str"
      ],
      "variables": [
        "text"
      ],
      "start_line": 337,
      "end_line": 340
    },
    {
      "name": "test_pad_right",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "str",
        "text.pad_right"
      ],
      "variables": [
        "text"
      ],
      "start_line": 343,
      "end_line": 346
    },
    {
      "name": "test_append",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span",
        "Text",
        "text.append",
        "str",
        "pytest.raises"
      ],
      "variables": [
        "text"
      ],
      "start_line": 349,
      "end_line": 361
    },
    {
      "name": "test_append_text",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "str",
        "Span",
        "text.append_text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 364,
      "end_line": 368
    },
    {
      "name": "test_end",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "StringIO",
        "Group",
        "console.file.getvalue",
        "console.print",
        "Text.from_markup"
      ],
      "variables": [
        "console",
        "text"
      ],
      "start_line": 371,
      "end_line": 375
    },
    {
      "name": "test_split",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.split",
        "Text",
        "list",
        "line2.append",
        "text.append",
        "Text(\"foo\").split",
        "len",
        "line1.append"
      ],
      "variables": [
        "text",
        "line1",
        "line2",
        "split"
      ],
      "start_line": 378,
      "end_line": 394
    },
    {
      "name": "test_split_spans",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.split",
        "Text.from_markup",
        "Span"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 397,
      "end_line": 403
    },
    {
      "name": "test_divide",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.divide",
        "Span",
        "Text",
        "text.append",
        "str",
        "len",
        "Text(\"foo\").divide"
      ],
      "variables": [
        "lines",
        "text",
        "lines",
        "text",
        "lines",
        "lines"
      ],
      "start_line": 406,
      "end_line": 446
    },
    {
      "name": "test_right_crop",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.right_crop",
        "Span",
        "Text",
        "text.append",
        "str"
      ],
      "variables": [
        "text"
      ],
      "start_line": 449,
      "end_line": 454
    },
    {
      "name": "test_wrap_3",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.wrap",
        "Console",
        "Text",
        "repr",
        "print",
        "len"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 457,
      "end_line": 464
    },
    {
      "name": "test_wrap_4",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text",
        "len"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 467,
      "end_line": 473
    },
    {
      "name": "test_wrap_wrapped_word_length_greater_than_available_width",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 476,
      "end_line": 483
    },
    {
      "name": "test_wrap_cjk",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 486,
      "end_line": 492
    },
    {
      "name": "test_wrap_cjk_width_mid_character",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 495,
      "end_line": 502
    },
    {
      "name": "test_wrap_cjk_mixed",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.wrap",
        "console.capture",
        "Console",
        "Text",
        "console.print",
        "capture.get"
      ],
      "variables": [
        "text",
        "console",
        "wrapped_lines"
      ],
      "start_line": 505,
      "end_line": 516
    },
    {
      "name": "test_wrap_long",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text",
        "len"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 519,
      "end_line": 525
    },
    {
      "name": "test_wrap_overflow",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text",
        "len"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 528,
      "end_line": 534
    },
    {
      "name": "test_wrap_overflow_long",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text",
        "len"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 537,
      "end_line": 541
    },
    {
      "name": "test_wrap_long_words",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 544,
      "end_line": 553
    },
    {
      "name": "test_wrap_long_words_2",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 556,
      "end_line": 564
    },
    {
      "name": "test_wrap_long_words_followed_by_other_words",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 567,
      "end_line": 578
    },
    {
      "name": "test_wrap_long_word_preceeded_by_word_of_full_line_length",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 581,
      "end_line": 592
    },
    {
      "name": "test_wrap_multiple_consecutive_spaces",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 595,
      "end_line": 605
    },
    {
      "name": "test_wrap_long_words_justify_left",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text",
        "len"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 608,
      "end_line": 616
    },
    {
      "name": "test_wrap_leading_and_trailing_whitespace",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "text.wrap",
        "Text"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 619,
      "end_line": 627
    },
    {
      "name": "test_no_wrap_no_crop",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "StringIO",
        "Text",
        "console.file.getvalue",
        "console.print",
        "repr",
        "print"
      ],
      "variables": [
        "text",
        "console"
      ],
      "start_line": 630,
      "end_line": 641
    },
    {
      "name": "test_fit",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text.fit",
        "str"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 644,
      "end_line": 648
    },
    {
      "name": "test_wrap_tabs",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.wrap",
        "Console",
        "Text",
        "str",
        "len"
      ],
      "variables": [
        "text",
        "lines"
      ],
      "start_line": 651,
      "end_line": 656
    },
    {
      "name": "test_render",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "console.print",
        "Text.from_markup",
        "console.export_text"
      ],
      "variables": [
        "console",
        "text",
        "output",
        "expected"
      ],
      "start_line": 659,
      "end_line": 667
    },
    {
      "name": "test_render_simple",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "console.begin_capture",
        "console.end_capture",
        "Console",
        "Text",
        "console.print"
      ],
      "variables": [
        "console",
        "result"
      ],
      "start_line": 670,
      "end_line": 675
    },
    {
      "name": "test_print",
      "parameters": [
        {
          "name": "print_text",
          "type": null
        },
        {
          "name": "result",
          "type": null
        }
      ],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "console.print",
        "console.export_text"
      ],
      "variables": [
        "console"
      ],
      "start_line": 686,
      "end_line": 689
    },
    {
      "name": "test_print_sep_end",
      "parameters": [
        {
          "name": "print_text",
          "type": null
        },
        {
          "name": "result",
          "type": null
        }
      ],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "console.file.getvalue",
        "StringIO",
        "console.print"
      ],
      "variables": [
        "console"
      ],
      "start_line": 700,
      "end_line": 703
    },
    {
      "name": "test_tabs_to_spaces",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.expand_tabs",
        "Text"
      ],
      "variables": [
        "text",
        "text",
        "text",
        "text",
        "text"
      ],
      "start_line": 706,
      "end_line": 726
    },
    {
      "name": "test_tabs_to_spaces_spans",
      "parameters": [
        {
          "name": null,
          "type": "str"
        },
        {
          "name": null,
          "type": "int"
        },
        {
          "name": null,
          "type": "str"
        },
        {
          "name": null,
          "type": "List[Span]"
        }
      ],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.expand_tabs",
        "print",
        "Text.from_markup"
      ],
      "variables": [
        "text"
      ],
      "start_line": 805,
      "end_line": 813
    },
    {
      "name": "test_markup_switch",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "console.file.getvalue",
        "StringIO",
        "console.print"
      ],
      "variables": [
        "console"
      ],
      "start_line": 816,
      "end_line": 820
    },
    {
      "name": "test_emoji",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "console.file.getvalue",
        "StringIO",
        "console.print"
      ],
      "variables": [
        "console"
      ],
      "start_line": 823,
      "end_line": 827
    },
    {
      "name": "test_emoji_switch",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "console.file.getvalue",
        "StringIO",
        "console.print"
      ],
      "variables": [
        "console"
      ],
      "start_line": 830,
      "end_line": 834
    },
    {
      "name": "test_assemble",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "str",
        "Span",
        "Text.assemble"
      ],
      "variables": [
        "text"
      ],
      "start_line": 837,
      "end_line": 840
    },
    {
      "name": "test_assemble_meta",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Span",
        "text.get_style_at_offset",
        "Console",
        "Style",
        "str",
        "Text.assemble"
      ],
      "variables": [
        "text",
        "spans",
        "expected",
        "console"
      ],
      "start_line": 843,
      "end_line": 853
    },
    {
      "name": "test_styled",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text.styled",
        "str",
        "Span"
      ],
      "variables": [
        "text"
      ],
      "start_line": 856,
      "end_line": 860
    },
    {
      "name": "test_strip_control_codes",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "text.append",
        "str"
      ],
      "variables": [
        "text"
      ],
      "start_line": 863,
      "end_line": 867
    },
    {
      "name": "test_get_style_at_offset",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "Style",
        "Text.from_markup",
        "text.get_style_at_offset"
      ],
      "variables": [
        "console",
        "text"
      ],
      "start_line": 870,
      "end_line": 874
    },
    {
      "name": "test_truncate_ellipsis",
      "parameters": [
        {
          "name": "input",
          "type": null
        },
        {
          "name": "count",
          "type": null
        },
        {
          "name": "expected",
          "type": null
        }
      ],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.truncate",
        "Text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 888,
      "end_line": 891
    },
    {
      "name": "test_truncate_ellipsis_pad",
      "parameters": [
        {
          "name": "input",
          "type": null
        },
        {
          "name": "count",
          "type": null
        },
        {
          "name": "expected",
          "type": null
        }
      ],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.truncate",
        "Text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 902,
      "end_line": 905
    },
    {
      "name": "test_pad",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.pad",
        "Text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 908,
      "end_line": 911
    },
    {
      "name": "test_align_left",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.align",
        "Text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 914,
      "end_line": 917
    },
    {
      "name": "test_align_right",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.align",
        "Text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 920,
      "end_line": 923
    },
    {
      "name": "test_align_center",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.align",
        "Text"
      ],
      "variables": [
        "text"
      ],
      "start_line": 926,
      "end_line": 929
    },
    {
      "name": "test_detect_indentation",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text(\"\").detect_indentation",
        "Text",
        "Text(\" \").detect_indentation",
        "Text(text).detect_indentation"
      ],
      "variables": [
        "text",
        "text"
      ],
      "start_line": 932,
      "end_line": 945
    },
    {
      "name": "test_indentation_guides",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "repr",
        "Text",
        "print",
        "text.with_indent_guides"
      ],
      "variables": [
        "text",
        "result",
        "expected"
      ],
      "start_line": 948,
      "end_line": 967
    },
    {
      "name": "test_slice",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "Text.from_markup",
        "Span",
        "pytest.raises"
      ],
      "variables": [
        "text"
      ],
      "start_line": 970,
      "end_line": 981
    },
    {
      "name": "test_wrap_invalid_style",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "console.print"
      ],
      "variables": [
        "console",
        "a"
      ],
      "start_line": 984,
      "end_line": 988
    },
    {
      "name": "test_apply_meta",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "Text",
        "text.apply_meta",
        "text.get_style_at_offset"
      ],
      "variables": [
        "text",
        "console"
      ],
      "start_line": 991,
      "end_line": 999
    },
    {
      "name": "test_on",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Console",
        "Text",
        "text.on",
        "text.get_style_at_offset"
      ],
      "variables": [
        "console",
        "text",
        "expected"
      ],
      "start_line": 1002,
      "end_line": 1009
    },
    {
      "name": "test_markup_property",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "Text",
        "Text.from_markup"
      ],
      "variables": [],
      "start_line": 1012,
      "end_line": 1025
    },
    {
      "name": "test_extend_style",
      "parameters": [],
      "return_type": null,
      "docstring": null,
      "calls": [
        "text.extend_style",
        "Text.from_markup",
        "Span"
      ],
      "variables": [
        "text"
      ],
      "start_line": 1028,
      "end_line": 1041
    },
    {
      "name": "test_append_tokens",
      "parameters": [],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "console.capture",
        "capture.get",
        "Console",
        "Text",
        "console.print",
        "repr",
        "print",
        "Text().append_tokens"
      ],
      "variables": [
        "console",
        "t",
        "output"
      ],
      "start_line": 1044,
      "end_line": 1061
    },
    {
      "name": "test_append_loop_regression",
      "parameters": [],
      "return_type": "None",
      "docstring": null,
      "calls": [
        "Text",
        "b.append_text",
        "a.append"
      ],
      "variables": [
        "a",
        "b"
      ],
      "start_line": 1064,
      "end_line": 1072
    }
  ],
  "variables": [
    "span",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "test_copy",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "count",
    "count",
    "text",
    "count",
    "text",
    "count",
    "count",
    "text",
    "count",
    "text",
    "re_cve",
    "compiled_re_cve",
    "count",
    "count",
    "text",
    "words",
    "count",
    "text",
    "words",
    "count",
    "text",
    "words",
    "count",
    "text",
    "count",
    "text",
    "text",
    "text",
    "expected",
    "console",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "console",
    "text",
    "text",
    "line1",
    "line2",
    "split",
    "text",
    "lines",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "lines",
    "text",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "console",
    "wrapped_lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "lines",
    "text",
    "console",
    "text",
    "lines",
    "text",
    "lines",
    "console",
    "text",
    "output",
    "expected",
    "console",
    "result",
    "console",
    "console",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "console",
    "console",
    "console",
    "text",
    "text",
    "spans",
    "expected",
    "console",
    "text",
    "text",
    "console",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "text",
    "result",
    "expected",
    "text",
    "console",
    "a",
    "text",
    "console",
    "console",
    "text",
    "expected",
    "text",
    "console",
    "t",
    "output",
    "a",
    "b"
  ]
}